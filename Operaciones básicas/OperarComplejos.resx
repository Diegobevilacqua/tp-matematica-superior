<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureAtras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureContinuar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZEAAABSCAYAAACVKun5AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALiMAAC4jAXilP3YAAAAHdElNRQfjBBYANAaOvzvNAAAAGXRFWHRDb21tZW50AENy
        ZWF0ZWQgd2l0aCBHSU1QV4EOFwAABtdJREFUeF7t3d1rFFcYx/EgIYiEICHoFBFxl5Y2ii8EUWxpcCVS
        8KZXeTPY4FtM3EkutH9Ab3pTCr33rlfSi7b+R20v2j/DPs/sOThZf8ns++6M3wc+gmbmnDlz8fw4s2Z2
        alyVpI0TyX5jzswPwKyPF4amKIqa+LKedUr0sl6ctrGmw7DVrhAcs9miDxrXHrx8+24Q7qev/7ExL2Tj
        AsDkO3t159Ufqp/1wvrp12HcucoFii/IFubBMWsLvaluAABgMKzP3svCpPWEpryBku06fLt20FhWCz3O
        J18+HQg1NgCMg+pRvVBjH6Xe3NjK+nCZwiSEx0kLj7tqUUdRNwsAcDTVS5Vac/27iQ+TXHh8oxahqJsC
        AOie6rHtaunak4kME7+genNzTV20om4AAKB/que2szDZsb49E1r4eCsEyIa60HZqwQCAwVM9OK+Wru6N
        NUhscn98NdNJgKgFAgCGT/XkyHYkz62Pn/R+Hlr7aMomzHYf99PXf6sLy1OLAgCMjurNkf+eXXi8dTK0
        +OFWK0A2ttTFtFOLAQCMnurReZd30x+GHiSdBohaAABg/FTPji6mq82hBYkNPEOAAED5qd4dDSVIQoA8
        UBPmqYsFAEwe1cOj8D+3ToUI6K8IEACoJtXLo4EFSbLfWFAT5KmLAwBMPtXTI+v/F0IU9FatXcjxv4mu
        LgoAUB6qt7v4eyQhErorD5BO3oOlLggAUB6qt0fxfVshGjorAgQAPi6qx0e1dP1RV0GS7DfOqYHy1EUA
        AMpL9frIcmExRMTx1ckuRE0OACg/1fNdLV17avlQ/PmIpc15NUCemhgAUH6q50e2wbgcokJX2IWsqJMj
        NSkAoDpU73fhQ/ajdyP+f4LViXlqQgBAdajeH9lG41qIjMNl6TJtPzz2e9HVZACA6lEZ4MJu5MMvs7Jd
        yEV1Qp6aCABQPSoDIttwXA/R8b7sH6+ogyM1CQCgulQWOP/sPERHq8KjrDvq4EhNAACoLpUFrpaubx96
        pMWjLABAO5UF0aFHWvaXJXVQpAYHAFSfygRXb26utgIkbZywEFlWB0VqYABA9alMcOF9WtM8ygIAHEll
        QpQ90rI/bqkfRmpQAMDHQ2WDqzc3tggRAMCxVDY4C5GHhAgA4FgqGxwhAgAopLLBESIAgEIqGxwhAgAo
        pLLBESIAgEIqGxwhAgAopLLBESIAgEIqGxwhAgAopLLBESIAgEIqGxwhAgAopLLBESIAgEIqGxwhAgAo
        pLLBESIAgEIqGxwhAgAopLLBESIAgEIqGxwhAgAopLLBxRC5rn4YqQEBAB8PlQ3O8uOef8f67KXdFz+q
        AyI1KACg+lQmuGS78c7yY37Ky9JkSR0UqYEBANWnMsHVm5urWYB4WYhcUQdFamAAQPWpTHCWG3dDhFiI
        7DfmLu3u/awOjNTgAIDqUlngkkfZo6yFECGtYjcCAMhTWeAsL1ZCdLwvS5VFdXCkJgAAVJfKAmchshyi
        431ZiJy+tvP9G3VCpCYBAFSPygCXPM4eZZ0J0XG47Aefq5MiNREAoHpUBjjbhdwOkfFhhd3Ib+rESE0G
        AKgO1ftd8iTbhZwNkaHLDvhUnRypCQEA1aF6v7NdyM0QFUeX70au7rz6XQ0QqUkBAOWner5LnnawC4ll
        B9bVIJGaGABQfqrnO9uFLIWIKK7WbuTlWzVQpCYHAJSX6vUuedbFLiSWnbDw7cGv/6kBI3URAIDyUT3e
        hQA5F6Khu7IT5wkSAKg21dtdstNHgMTyAdTgkbogAEB5qN7urP8vJmnjRIiD3soGmWU3AgDVpHq6C7uQ
        wy9Z7LV8oPvp67/URJG6OADA5FK93CXPswA53/cuJF8ECQBUh+rhbigBEosgAYDyU73bDTVAYnmQ8BkJ
        AJST6tluJAESyyY6UxQkTi0AADB6qkdH4UP00QRILJvwtPnMwuRfdVGRWgwAYHRUb3YhPBbNwkgDJF8+
        Oa9IAYDJpHqyi7+JPrbwyFcrSF79qS40Ty0QADB4qgdHfb3KZFiVbYcOGteLXiPv1IIBAP1TPTfKXud+
        0Fiyft3dyxRHWXZx83aRN4q+IdGpGwAA6J7qsVH2jYQHjZsTHR7tFcLkloXJG7WoduqmAACOpnppXvI4
        C4/bpQqP9gph8pVZWdzb/UUttJ26Wb1QYwPAOKge1Qs1dl7yKAuOFbNs/fdMaMXVKFvQnC+s3txcvbS7
        95O6Ab344sXOu2TTbtxaZ3x+ABiXWrq+rXpZr5LtVl+z/nrX+uxgXpo46WULnbUF36k3Nx72acvGuZGk
        jZkwNEVR1ESX9atp61tXvH+19bOu2Tj3/IlPGHrENTX1P6WWfTpLLPjdAAAAAElFTkSuQmCC
</value>
  </data>
</root>