<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureAtras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZEAAABSCAYAAACVKun5AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IwAALiMBeKU/dgAAAAd0SU1FB+MEFgA0Bo6/O80AAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJ
        TVBXgQ4XAAAG10lEQVR4Xu3d3WsUVxjH8SAhiIQgIegUEXGXljaKLwRRbGlwJVLwpld5M9jgW0zcSS60
        f0BvelMKvfeuV9KLtv5HbS/aP8M+z+w5OFl/yez77ozfBz6CZuacOXPx/DizZnZqXJWkjRPJfmPOzA/A
        rI8XhqYoipr4sp51SvSyXpy2sabDsNWuEByz2aIPGtcevHz7bhDup6//sTEvZOMCwOQ7e3Xn1R+qn/XC
        +unXYdy5ygWKL8gW5sExawu9qW4AAGAwrM/ey8Kk9YSmvIGS7Tp8u3bQWFYLPc4nXz4dCDU2AIyD6lG9
        UGMfpd7c2Mr6cJnCJITHSQuPu2pRR1E3CwBwNNVLlVpz/buJD5NceHyjFqGomwIA6J7qse1q6dqTiQwT
        v6B6c3NNXbSibgAAoH+q57azMNmxvj0TWvh4KwTIhrrQdmrBAIDBUz04r5au7o01SGxyf3w100mAqAUC
        AIZP9eTIdiTPrY+f9H4eWvtoyibMdh/309d/qwvLU4sCAIyO6s2R/55deLx1MrT44VYrQDa21MW0U4sB
        AIye6tF5l3fTH4YeJJ0GiFoAAGD8VM+OLqarzaEFiQ08Q4AAQPmp3h0NJUhCgDxQE+apiwUATB7Vw6Pw
        P7dOhQjorwgQAKgm1cujgQVJst9YUBPkqYsDAEw+1dMj6/8XQhT0Vq1dyPG/ia4uCgBQHqq3u/h7JCES
        uisPkE7eg6UuCABQHqq3R/F9WyEaOisCBAA+LqrHR7V0/VFXQZLsN86pgfLURQAAykv1+shyYTFExPHV
        yS5ETQ4AKD/V810tXXtq+VD8+YilzXk1QJ6aGABQfqrnR7bBuByiQlfYhayokyM1KQCgOlTvd+FD9qN3
        I/5/gtWJeWpCAEB1qN4f2UbjWoiMw2XpMm0/PPZ70dVkAIDqURngwm7kwy+zsl3IRXVCnpoIAFA9KgMi
        23BcD9Hxvuwfr6iDIzUJAKC6VBY4/+w8REerwqOsO+rgSE0AAKgulQWulq5vH3qkxaMsAEA7lQXRoUda
        9pcldVCkBgcAVJ/KBFdvbq62AiRtnLAQWVYHRWpgAED1qUxw4X1a0zzKAgAcSWVClD3Ssj9uqR9GalAA
        wMdDZYOrNze2CBEAwLFUNjgLkYeECADgWCobHCECACikssERIgCAQiobHCECACikssERIgCAQiobHCEC
        ACikssERIgCAQiobHCECACikssERIgCAQiobHCECACikssERIgCAQiobHCECACikssERIgCAQiobHCEC
        ACikssERIgCAQiobHCECACikssHFELmufhipAQEAHw+VDc7y455/x/rspd0XP6oDIjUoAKD6VCa4ZLvx
        zvJjfsrL0mRJHRSpgQEA1acywdWbm6tZgHhZiFxRB0VqYABA9alMcJYbd0OEWIjsN+Yu7e79rA6M1OAA
        gOpSWeCSR9mjrIUQIa1iNwIAyFNZ4CwvVkJ0vC9LlUV1cKQmAABUl8oCZyGyHKLjfVmInL628/0bdUKk
        JgEAVI/KAJc8zh5lnQnRcbjsB5+rkyI1EQCgelQGONuF3A6R8WGF3chv6sRITQYAqA7V+13yJNuFnA2R
        ocsO+FSdHKkJAQDVoXq/s13IzRAVR5fvRq7uvPpdDRCpSQEA5ad6vkuedrALiWUH1tUgkZoYAFB+quc7
        24UshYgortZu5OVbNVCkJgcAlJfq9S551sUuJJadsPDtwa//qQEjdREAgPJRPd6FADkXoqG7shPnCRIA
        qDbV212y00eAxPIB1OCRuiAAQHmo3u6s/y8maeNEiIPeygaZZTcCANWkeroLu5DDL1nstXyg++nrv9RE
        kbo4AMDkUr3cJc+zADnf9y4kXwQJAFSH6uFuKAESiyABgPJTvdsNNUBieZDwGQkAlJPq2W4kARLLJjpT
        FCROLQAAMHqqR0fhQ/TRBEgsm/C0+czC5F91UZFaDABgdFRvdiE8Fs3CSAMkXz45r0gBgMmkerKLv4k+
        tvDIVytIXv2pLjRPLRAAMHiqB0d9vcpkWJVthw4a14teI+/UggEA/VM9N8pe537QWLJ+3d3LFEdZdnHz
        dpE3ir4h0akbAADonuqxUfaNhAeNmxMdHu0VwuSWhckbtah26qYAAI6memle8jgLj9ulCo/2CmHylVlZ
        3Nv9RS20nbpZvVBjA8A4qB7VCzV2XvIoC44Vs2z990xoxdUoW9CcL6ze3Fy9tLv3k7oBvfjixc67ZNNu
        3FpnfH4AGJdaur6telmvku1WX7P+etf67GBemjjpZQudtQXfqTc3HvZpy8a5kaSNmTA0RVHURJf1q2nr
        W1e8f7X1s67ZOPf8iU8YesQ1NfU/pZZ9Okss+N0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureContinuar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZEAAABSCAYAAACVKun5AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IwAALiMBeKU/dgAAAAd0SU1FB+MEFgA0Bo6/O80AAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJ
        TVBXgQ4XAAAG10lEQVR4Xu3d3WsUVxjH8SAhiIQgIegUEXGXljaKLwRRbGlwJVLwpld5M9jgW0zcSS60
        f0BvelMKvfeuV9KLtv5HbS/aP8M+z+w5OFl/yez77ozfBz6CZuacOXPx/DizZnZqXJWkjRPJfmPOzA/A
        rI8XhqYoipr4sp51SvSyXpy2sabDsNWuEByz2aIPGtcevHz7bhDup6//sTEvZOMCwOQ7e3Xn1R+qn/XC
        +unXYdy5ygWKL8gW5sExawu9qW4AAGAwrM/ey8Kk9YSmvIGS7Tp8u3bQWFYLPc4nXz4dCDU2AIyD6lG9
        UGMfpd7c2Mr6cJnCJITHSQuPu2pRR1E3CwBwNNVLlVpz/buJD5NceHyjFqGomwIA6J7qse1q6dqTiQwT
        v6B6c3NNXbSibgAAoH+q57azMNmxvj0TWvh4KwTIhrrQdmrBAIDBUz04r5au7o01SGxyf3w100mAqAUC
        AIZP9eTIdiTPrY+f9H4eWvtoyibMdh/309d/qwvLU4sCAIyO6s2R/55deLx1MrT44VYrQDa21MW0U4sB
        AIye6tF5l3fTH4YeJJ0GiFoAAGD8VM+OLqarzaEFiQ08Q4AAQPmp3h0NJUhCgDxQE+apiwUATB7Vw6Pw
        P7dOhQjorwgQAKgm1cujgQVJst9YUBPkqYsDAEw+1dMj6/8XQhT0Vq1dyPG/ia4uCgBQHqq3u/h7JCES
        uisPkE7eg6UuCABQHqq3R/F9WyEaOisCBAA+LqrHR7V0/VFXQZLsN86pgfLURQAAykv1+shyYTFExPHV
        yS5ETQ4AKD/V810tXXtq+VD8+YilzXk1QJ6aGABQfqrnR7bBuByiQlfYhayokyM1KQCgOlTvd+FD9qN3
        I/5/gtWJeWpCAEB1qN4f2UbjWoiMw2XpMm0/PPZ70dVkAIDqURngwm7kwy+zsl3IRXVCnpoIAFA9KgMi
        23BcD9Hxvuwfr6iDIzUJAKC6VBY4/+w8REerwqOsO+rgSE0AAKgulQWulq5vH3qkxaMsAEA7lQXRoUda
        9pcldVCkBgcAVJ/KBFdvbq62AiRtnLAQWVYHRWpgAED1qUxw4X1a0zzKAgAcSWVClD3Ssj9uqR9GalAA
        wMdDZYOrNze2CBEAwLFUNjgLkYeECADgWCobHCECACikssERIgCAQiobHCECACikssERIgCAQiobHCEC
        ACikssERIgCAQiobHCECACikssERIgCAQiobHCECACikssERIgCAQiobHCECACikssERIgCAQiobHCEC
        ACikssERIgCAQiobHCECACikssHFELmufhipAQEAHw+VDc7y455/x/rspd0XP6oDIjUoAKD6VCa4ZLvx
        zvJjfsrL0mRJHRSpgQEA1acywdWbm6tZgHhZiFxRB0VqYABA9alMcJYbd0OEWIjsN+Yu7e79rA6M1OAA
        gOpSWeCSR9mjrIUQIa1iNwIAyFNZ4CwvVkJ0vC9LlUV1cKQmAABUl8oCZyGyHKLjfVmInL628/0bdUKk
        JgEAVI/KAJc8zh5lnQnRcbjsB5+rkyI1EQCgelQGONuF3A6R8WGF3chv6sRITQYAqA7V+13yJNuFnA2R
        ocsO+FSdHKkJAQDVoXq/s13IzRAVR5fvRq7uvPpdDRCpSQEA5ad6vkuedrALiWUH1tUgkZoYAFB+quc7
        24UshYgortZu5OVbNVCkJgcAlJfq9S551sUuJJadsPDtwa//qQEjdREAgPJRPd6FADkXoqG7shPnCRIA
        qDbV212y00eAxPIB1OCRuiAAQHmo3u6s/y8maeNEiIPeygaZZTcCANWkeroLu5DDL1nstXyg++nrv9RE
        kbo4AMDkUr3cJc+zADnf9y4kXwQJAFSH6uFuKAESiyABgPJTvdsNNUBieZDwGQkAlJPq2W4kARLLJjpT
        FCROLQAAMHqqR0fhQ/TRBEgsm/C0+czC5F91UZFaDABgdFRvdiE8Fs3CSAMkXz45r0gBgMmkerKLv4k+
        tvDIVytIXv2pLjRPLRAAMHiqB0d9vcpkWJVthw4a14teI+/UggEA/VM9N8pe537QWLJ+3d3LFEdZdnHz
        dpE3ir4h0akbAADonuqxUfaNhAeNmxMdHu0VwuSWhckbtah26qYAAI6memle8jgLj9ulCo/2CmHylVlZ
        3Nv9RS20nbpZvVBjA8A4qB7VCzV2XvIoC44Vs2z990xoxdUoW9CcL6ze3Fy9tLv3k7oBvfjixc67ZNNu
        3FpnfH4AGJdaur6telmvku1WX7P+etf67GBemjjpZQudtQXfqTc3HvZpy8a5kaSNmTA0RVHURJf1q2nr
        W1e8f7X1s67ZOPf8iU8YesQ1NfU/pZZ9Okss+N0AAAAASUVORK5CYII=
</value>
  </data>
</root>